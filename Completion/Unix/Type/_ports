#autoload

# Complete network port names/numbers
#
# Options:
#   -N [<array>]  Complete port numbers rather than names. The optional <array>
#                 argument may be either an array expression of the form
#                 '(port1[:desc1] port2[:desc2] ...)', or the name of an array
#                 containing the equivalent elements. With no argument or an
#                 empty argument, no possibilities are offered (since it isn't
#                 particularly useful to complete thousands of random numbers).
#                 Name completion is used by default for historical reasons
#
# Styles:
#   ports  Specify an array of port names/numbers to be offered for the given
#          context

local tmp num
local -a expl ports
local -A opts

zparseopts -A opts -D -E -- N::

if zstyle -a ":completion:${curcontext}:" ports ports; then
  : # noop
elif (( $+opts[-N] )); then
  if [[ $opts[-N] == \(* ]]; then
    ports=( ${=${opts[-N]}[2,-2]} )
  elif [[ -n $opts[-N] ]]; then
    for tmp in $=opts[-N]; do
      ports+=( ${(P)tmp} )
    done
  fi
  ports=( ${(onu)ports} )
  num=1
else
  (( $+_cache_ports )) ||
  typeset -ga _cache_ports=(
    ${${(M)${${(f)"$(</etc/services)"}:#\#*}#*/tcp}%%[[:space:]]*}
  )
  ports=( $_cache_ports )
fi

if (( num )); then
  _describe -2Vx -t ports 'port number' ports "$@"
else
  _wanted ports expl port compadd -a "$@" - ports
fi
